% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualization.R
\name{plot_optimal_ppm}
\alias{plot_optimal_ppm}
\title{Diagnostic plot for selecting optimal peak integration boundaries.}
\usage{
plot_optimal_ppm(
  ms_data,
  proteoforms,
  charge_states,
  ppm_values = seq(0, 2500, 50),
  subplots = c("all", "total", "modcom")
)
}
\arguments{
\item{ms_data}{Mass spectrometry data stored in an mzR object as returned by
\code{\link[mzR:openMSfile]{mzR::openMSfile()}}.}

\item{proteoforms}{Proteoform masses as returned by \code{\link[=assemble_proteoforms]{assemble_proteoforms()}}.}

\item{charge_states}{Vector of charge states in which the proteoforms should
be quantified.}

\item{ppm_values}{Vectors of PPM values where abundances should be sampled.}

\item{subplots}{Subplots that should be drawn; one of \code{"all"} (draw all
subplots), \code{"total"} (draw only the total abundance plot), and \code{"modcom"}
(draw only the subplot with individual proteoform abundances).}
}
\value{
A ggplot object describing the created plot.
}
\description{
This function draws proteoform abundances vs the PPM value used by
\code{\link[=ionize]{ionize()}}, which in turn determines the integration boundaries for each ion.
}
\details{
By default, the function creates four plots: Total proteoform abundance vs
PPM (upper left), first derivative of this curve (lower left), individual
proteoform abundances vs PPM (upper right) and first derivative of the latter
curve (lower right).

Optimal integration boundaries capture each peak completely and do not lead
to overlaps with neighboring peaks. This corresponds to the PPM value where
the curves in the upper plots reach the first plateau, and their derivatives
become zero.
}
\examples{
ms_data <- mzR::openMSfile(
  system.file("extdata", "mzml", "mab1.mzML", package = "fragquaxi")
)
proteins <- define_proteins(
  system.file("extdata", "mab_sequence.fasta", package = "fragquaxi"),
  .disulfides = 16
)
modcoms <- define_ptm_compositions(sample_modcoms)
pfm_masses <- assemble_proteoforms(proteins, modcoms)

plot_optimal_ppm(ms_data, pfm_masses, 33L:40L)
}
